@SuppressWarnings('PMD.MethodNamingConventions')

public with sharing class ZumzumBACSpaymentActions {
    @InvocableMethod(label='Link Purchase Invoices')
    public static List<Response> linkPurchaseInvoices(List<Request> requests) {
        List<Response> result = new List<Response>();
        String paymentRunId = requests[0].recordId;

        Set<Id> linkedPIids = new Set<Id>();
        List<Payment_Run_Line_Item__c> existingPrliList = [
            SELECT Id, Purchase_Invoice__c
            FROM Payment_Run_Line_Item__c
            WITH SECURITY_ENFORCED
        ];

        for (Payment_Run_Line_Item__c paymentRunLineItem : existingPrliList) {
            linkedPIids.add(paymentRunLineItem.Purchase_Invoice__c);
        }

        List<Payment_Run_Line_Item__c> paymentRunLineItemList = new List<Payment_Run_Line_Item__c>();

        for (Zumzum__Purchase_Invoice__c purchaseInvoice : [
            SELECT Id
            FROM Zumzum__Purchase_Invoice__c
            WHERE Zumzum__Invoice_Due_Date__c <= :Date.today() + 6
        ]) {
            Payment_Run_Line_Item__c paymentRunLineItemInstance = new Payment_Run_Line_Item__c();
            paymentRunLineItemInstance.Payment_Run__c = paymentRunId;
            paymentRunLineItemInstance.Purchase_Invoice__c = purchaseInvoice.Id;
            paymentRunLineItemList.add(paymentRunLineItemInstance);
        }

        if (paymentRunLineItemList.isEmpty()) {
            result.add(new Response( false, 'There are no Purchase Invoices matching the action criteria' ));
        } else {

            if (Payment_Run_Line_Item__c.sObjectType.getDescribe().isCreateable()) {
                insert paymentRunLineItemList;
                result.add(new Response(true));
            } else {
                result.add(new Response( false, 'The user has no access rights to create Payment Run Line Items' ));
            }

        }

        return result;
    }

    public class Request {
        @InvocableVariable( label='Payment Run Id' required=true )
        public String recordId;
    }

    public class Response {
        @InvocableVariable public Boolean isSuccess;
        @InvocableVariable public String message;

        public Response(Boolean isSuccess) {
            this(isSuccess, null);
        }

        public Response(Boolean isSuccess, String message) {
            this.isSuccess = isSuccess;
            this.message = message;
        }
    }
}